/* 
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Other/SQLTemplate.sql to edit this template
 */
/**
 * Author:  windows 10
 * Created: Jul 19, 2025
 */
-- Drop existing tables if they exist to avoid conflicts during re-creation
DROP TABLE itinerary_places CASCADE CONSTRAINTS;
DROP TABLE itineraries CASCADE CONSTRAINTS;
DROP TABLE place_tag_map CASCADE CONSTRAINTS;
DROP TABLE place_tags CASCADE CONSTRAINTS;
DROP TABLE places CASCADE CONSTRAINTS;
DROP TABLE cities CASCADE CONSTRAINTS;
DROP TABLE users CASCADE CONSTRAINTS;

-- Create users table
CREATE TABLE users (
    user_id      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR2(100) NOT NULL,
    email        VARCHAR2(100) UNIQUE NOT NULL,
    password     VARCHAR2(100) NOT NULL
);

-- Create cities table
CREATE TABLE cities (
    city_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    city_name   VARCHAR2(100) NOT NULL,
    state       VARCHAR2(100),
    country     VARCHAR2(100)
);

-- Create places table
CREATE TABLE places (
    place_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name            VARCHAR2(100) NOT NULL,
    city_id         NUMBER NOT NULL,
    visit_duration  NUMBER, -- in hours
    entry_fee       NUMBER,
    description     VARCHAR2(500),
    CONSTRAINT fk_place_city FOREIGN KEY (city_id) REFERENCES cities(city_id)
);

-- Create place_tags table
CREATE TABLE place_tags (
    tag_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tag_name   VARCHAR2(50) NOT NULL
);

-- Create place_tag_map table
CREATE TABLE place_tag_map (
    place_id  NUMBER NOT NULL,
    tag_id    NUMBER NOT NULL,
    CONSTRAINT pk_place_tag_map PRIMARY KEY (place_id, tag_id),
    CONSTRAINT fk_ptm_place FOREIGN KEY (place_id) REFERENCES places(place_id),
    CONSTRAINT fk_ptm_tag   FOREIGN KEY (tag_id)   REFERENCES place_tags(tag_id)
);

-- Create itineraries table
CREATE TABLE itineraries (
    itinerary_id    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         NUMBER NOT NULL,
    city_id         NUMBER NOT NULL,
    total_duration  NUMBER,
    total_cost      NUMBER,
    created_on      DATE DEFAULT SYSDATE,
    CONSTRAINT fk_itinerary_user FOREIGN KEY (user_id) REFERENCES users(user_id),
    CONSTRAINT fk_itinerary_city FOREIGN KEY (city_id) REFERENCES cities(city_id)
);

-- Create itinerary_places table
CREATE TABLE itinerary_places (
    itinerary_id   NUMBER NOT NULL,
    place_id       NUMBER NOT NULL,
    visit_order    NUMBER,
    CONSTRAINT pk_itinerary_place PRIMARY KEY (itinerary_id, place_id),
    CONSTRAINT fk_ip_itinerary FOREIGN KEY (itinerary_id) REFERENCES itineraries(itinerary_id),
    CONSTRAINT fk_ip_place     FOREIGN KEY (place_id)     REFERENCES places(place_id)
);

